{
	"info": {
		"_postman_id": "53bf1ae6-8a37-4a1f-8e6c-69d79cdebd21",
		"name": "Audition RBAC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45008493",
		"_collection_link": "https://willjohnson-3918071.postman.co/workspace/Will-Johnson's-Workspace~88c17b65-b26a-4446-8a7f-6a0bf91e7f5a/collection/45008493-53bf1ae6-8a37-4a1f-8e6c-69d79cdebd21?action=share&source=collection_link&creator=45008493"
	},
	"item": [
		{
			"name": "casting-assistant",
			"item": [
				{
					"name": "Get actor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "actor_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/movies?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get movie by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create cast assignment 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actorId\": 10,\n    \"movieId\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/casts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"casts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cast assignment 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/casts/movies/:movie_id/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"casts",
								"movies",
								":movie_id",
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "10"
								},
								{
									"key": "actor_id",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Shawshank Redemption\",\n    \"genre\": \"DRAMA\",\n    \"releaseDate\": \"1994-10-14\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create actor 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Fred Flintstone\",\n    \"age\": 197,\n    \"gender\": \"MALE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete actor 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "actor_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "casting-director",
			"item": [
				{
					"name": "Get actor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "actor_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/movies?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get movie by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create cast assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actorId\": 10,\n    \"movieId\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/casts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"casts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cast assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/casts/movies/:movie_id/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"casts",
								"movies",
								":movie_id",
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "10"
								},
								{
									"key": "actor_id",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json-patch+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/releaseDate\",\n        \"value\": \"1000-01-01\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify movie 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json-patch+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/releaseDate\",\n        \"value\": \"1995-06-30\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 and extract actor ID\", function () {",
									"    pm.response.to.have.status(201);",
									"    const responseJson = pm.response.json();",
									"    const actorResponse = responseJson;",
									"    pm.environment.set(\"actorId\", actorResponse.id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Fred Flintstone\",\n    \"age\": 197,\n    \"gender\": \"MALE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json-patch+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/gender\",\n        \"value\": \"FEMALE\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "actor_id",
									"value": "{{actorId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.clear(\"actorId\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "actor_id",
									"value": "{{actorId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Shawshank Redemption\",\n    \"genre\": \"DRAMA\",\n    \"releaseDate\": \"1994-10-14\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "executive-producer",
			"item": [
				{
					"name": "Get actor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "actor_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get movies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/movies?page=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get actors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get movie by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create cast assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"actorId\": 10,\n    \"movieId\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/casts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"casts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete cast assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/casts/movies/:movie_id/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"casts",
								"movies",
								":movie_id",
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "10"
								},
								{
									"key": "actor_id",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 and Extract movie ID\", function () {",
									"    pm.response.to.have.status(201);",
									"    const responseJson = pm.response.json();",
									"    const movieResponse = responseJson;",
									"    pm.environment.set(\"movieId\", movieResponse.id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"The Shawshank Redemption\",\n    \"genre\": \"DRAMA\",\n    \"releaseDate\": \"1994-10-14\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json-patch+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/releaseDate\",\n        \"value\": \"1995-06-30\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "{{movieId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete movie",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.clear(\"movieId\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json-patch+json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/releaseDate\",\n        \"value\": \"1000-01-01\"\n    }\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/movies/:movie_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"movies",
								":movie_id"
							],
							"variable": [
								{
									"key": "movie_id",
									"value": "{{movieId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201 and extract actor ID\", function () {",
									"        pm.response.to.have.status(201);",
									"    const responseJson = pm.response.json();",
									"    const actorResponse = responseJson;",
									"    pm.environment.set(\"actorId\", actorResponse.id);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Fred Flintstone\",\n    \"age\": 197,\n    \"gender\": \"MALE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/actors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json-patch+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"op\": \"add\",\n        \"path\": \"/gender\",\n        \"value\": \"FEMALE\"\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "actor_id",
									"value": "{{actorId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete actor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.environment.clear(\"actorId\");"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/actors/:actor_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"actors",
								":actor_id"
							],
							"variable": [
								{
									"key": "actor_id",
									"value": "{{actorId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:5000",
			"type": "string"
		}
	]
}