"""empty message

Revision ID: e5364adb5ede
Revises: a98357492a28
Create Date: 2025-06-12 12:59:54.478763

"""

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "e5364adb5ede"
down_revision = "a98357492a28"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("actor")
    op.drop_table("movie")

    op.create_table(
        "actors",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("age", sa.Integer(), nullable=False),
        sa.Column("gender", sa.Enum("MALE", "FEMALE", name="gender"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "movies",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("title", sa.String(), nullable=False),
        sa.Column("release_date", sa.Date(), nullable=True),
        sa.Column(
            "genre",
            sa.Enum(
                "ACTION_AND_ADVENTURE",
                "ANIMATION",
                "COMEDY",
                "DOCUMENTARY",
                "DRAMA",
                "FANTASY",
                "HISTORICAL",
                "HORROR",
                "NOIR",
                "SCI_FI",
                "WESTERN",
                name="genre",
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "casts",
        sa.Column("movie_id", sa.Integer(), nullable=False),
        sa.Column("actor_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["actor_id"],
            ["actors.id"],
        ),
        sa.ForeignKeyConstraint(
            ["movie_id"],
            ["movies.id"],
        ),
        sa.PrimaryKeyConstraint("movie_id", "actor_id"),
    )
    # ### end Alembic commands ###


def downgrade():
    op.drop_table("casts")
    op.drop_table("movies")
    op.drop_table("actors")

    sa.Enum(
        "ACTION_AND_ADVENTURE",
        "ANIMATION",
        "COMEDY",
        "DOCUMENTARY",
        "DRAMA",
        "FANTASY",
        "HISTORICAL",
        "HORROR",
        "NOIR",
        "SCI_FI",
        "WESTERN",
        name="genre",
    ).drop(op.get_bind())
    sa.Enum("MALE", "FEMALE", name="gender").drop(op.get_bind())

    op.create_table(
        "actor",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("age", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("gender", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "movie",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("release_date", sa.DATE(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
